{"version":3,"sources":["networkRequest.js","Components/ContentReel.js","Components/MovieGenres.js","Components/DisplayMovies.js","Components/TVGenres.js","Components/DisplayTV.js","Components/HomePage.js","Components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["dotenv","config","API_KEY","process","REACT_APP_TMDB_KEY","BASE_URL","endPoints","popularMovie","a","fetch","response","json","popularTV","topRatedMovie","topRatedTV","console","log","nowPlayingMovie","nowPlayingTV","airingToday","searchAPI","query","movieGenres","tvGenres","movieDiscover","genreID","tvDiscover","ContentReel","props","title","id","list","map","item","className","name","src","poster_path","profile_path","alt","overview","MovieGenre","dropDownMenu","e","setState","selectedCat","target","value","then","res","displayedCat","results","convertIDtoString","state","genreMenu","find","genre","genres","this","length","onChange","disabled","React","Component","DisplayMovie","popMovies","topRatedMovies","nowPlayingM","Fragment","TVGenre","DisplayTV","popTV","searchBar","changeSearch","search","triggerSearch","result","type","onClick","NavBar","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQACAA,EAAOC,SACP,IAAMC,EAAUC,mJAAYC,mBACtBC,EAAW,+BACXC,EACQ,iBADRA,EAES,cAFTA,EAGS,mBAHTA,EAIU,gBAJVA,EAKW,qBALXA,EAMY,iBANZA,EAOW,mBAPXA,EAQM,gBARNA,EASW,oBATXA,EAUQ,iBAVRA,EAWa,kBAXbA,EAYU,eAIHC,EAAY,uCAAG,4BAAAC,EAAA,sEACDC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA6CJ,IADjD,cAClBQ,EADkB,yBAEjBA,EAASC,QAFQ,2CAAH,qDAKZC,EAAS,uCAAG,4BAAAJ,EAAA,sEACEC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA8CJ,IADrD,cACfQ,EADe,yBAEdA,EAASC,QAFK,2CAAH,qDAKTE,EAAa,uCAAG,4BAAAL,EAAA,sEACFC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA8CJ,IADjD,cACnBQ,EADmB,yBAElBA,EAASC,QAFS,2CAAH,qDAKbG,EAAU,uCAAG,4BAAAN,EAAA,sEACCC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA+CJ,IADrD,cAChBQ,EADgB,OAEtBK,QAAQC,IAAIN,GAFU,kBAGfA,EAASC,QAHM,2CAAH,qDAMVM,EAAe,uCAAG,4BAAAT,EAAA,sEACJC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAAgDJ,IADjD,cACrBQ,EADqB,yBAEpBA,EAASC,QAFW,2CAAH,qDAKfO,EAAY,uCAAG,4BAAAV,EAAA,sEACDC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAAiDJ,IADrD,cAClBQ,EADkB,yBAEjBA,EAASC,QAFQ,2CAAH,qDAKZQ,EAAW,uCAAG,4BAAAX,EAAA,sEACAC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAAgDJ,IADrD,cACjBQ,EADiB,yBAEhBA,EAASC,QAFO,2CAAH,qDAKXS,EAAS,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACEC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA2CJ,EAA3C,kBAA4DmB,IADnE,cACfX,EADe,yBAEdA,EAASC,QAFK,2CAAH,sDAKTW,EAAW,uCAAG,4BAAAd,EAAA,sEACAC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAAgDJ,IADrD,cACjBQ,EADiB,yBAEhBA,EAASC,QAFO,2CAAH,qDAKXY,EAAQ,uCAAG,4BAAAf,EAAA,sEACGC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA6CJ,IADrD,cACdQ,EADc,yBAEbA,EAASC,QAFI,2CAAH,qDAKRa,EAAa,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,sEACFC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAAkDJ,EAAlD,wBAAyEuB,IAD5E,cACnBf,EADmB,yBAElBA,EAASC,QAFS,2CAAH,sDAKbe,EAAU,uCAAG,WAAOD,GAAP,eAAAjB,EAAA,sEACCC,MAAM,GAAD,OAAIJ,GAAJ,OAAeC,EAAf,oBAA+CJ,EAA/C,wBAAsEuB,IAD5E,cAChBf,EADgB,yBAEfA,EAASC,QAFM,2CAAH,sD,OC3DRgB,MAff,SAAqBC,GACjB,OACI,gCACI,6BAAKA,EAAMC,QACX,sBAAMC,GAAG,OAAT,SACKF,EAAMG,KAAKC,KAAI,SAAAC,GAAI,OAAI,sBAAKC,UAAU,cAAf,UACpB,sBAAMJ,GAAG,QAAT,SAAkBG,EAAKJ,OAASI,EAAKE,OACrC,qBAAKL,GAAG,SAASM,IAAMH,EAAKI,aAAeJ,EAAKK,aAA1B,yCAA0EL,EAAKI,aAAeJ,EAAKK,cAAgB,0DAA2DC,IAAKN,EAAKJ,QAC9M,mBAAGC,GAAG,WAAN,SAAkBG,EAAKO,aAH+BP,EAAKH,aCsChEW,E,kDAxCX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAeVc,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QACtCvB,EAAcmB,EAAEG,OAAOC,OAClBC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEM,aAAcD,EAAIE,cAnBpC,EAsBnBC,kBAAoB,SAACtB,GACjB,OAAO,EAAKuB,MAAMC,UAAUC,MAAK,SAAAC,GAAK,OAAIA,EAAM1B,IAAMA,KAAIK,MApB1D,EAAKkB,MAAQ,CACTC,UAAW,GACXJ,aAAc,GACdL,YAAa,IANF,E,qDAWnB,WAAoB,IAAD,OACfvB,IACK0B,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEU,UAAWL,EAAIQ,c,oBAapD,WACI,OACI,gCACKC,KAAKL,MAAMC,UAAUK,OAAS,GAAK,yBAAQC,SAAUF,KAAKhB,aAAcK,MAAOW,KAAKL,MAAMR,YAAvD,UAChC,wBAAQgB,UAAQ,EAACd,MAAM,GAAvB,wBACCW,KAAKL,MAAMC,UAAUtB,KAAI,SAAAwB,GAAK,OAAI,wBAAuBT,MAAOS,EAAM1B,GAApC,SAAyC0B,EAAMrB,MAAlCqB,EAAM1B,UAGzD4B,KAAKL,MAAMH,aAAaS,OAAS,GAAK,cAAC,EAAD,CAAa5B,KAAM2B,KAAKL,MAAMH,aAAcrB,MAAO6B,KAAKN,kBAAkBM,KAAKL,MAAMR,sB,GAnCnHiB,IAAMC,WCmChBC,E,kDAhCX,WAAYpC,GAAQ,IAAD,8BACf,cAAMA,IAEDyB,MAAQ,CACTY,UAAW,GACXC,eAAgB,GAChBC,YAAa,IANF,E,qDAUnB,WAAqB,IAAD,OAChB5D,IACKyC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEqB,UAAWhB,EAAIE,aAChDtC,IACKmC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEsB,eAAgBjB,EAAIE,aACrDlC,IACK+B,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEuB,YAAalB,EAAIE,e,oBAItD,WACI,OACI,eAAC,IAAMiB,SAAP,WACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAarC,KAAM2B,KAAKL,MAAMc,YAAatC,MAAM,gBACjD,cAAC,EAAD,CAAaE,KAAM2B,KAAKL,MAAMY,UAAWpC,MAAM,mBAC/C,cAAC,EAAD,CAAaE,KAAM2B,KAAKL,MAAMa,eAAgBrC,MAAM,qB,GA3BzCiC,IAAMC,W,QCwClBM,E,kDAzCX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAeVc,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QACtCrB,EAAWiB,EAAEG,OAAOC,OACfC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEM,aAAcD,EAAIE,cAnBpC,EAsBnBC,kBAAoB,SAACtB,GACjB,OAAO,EAAKuB,MAAMC,UAAUC,MAAK,SAAAC,GAAK,OAAIA,EAAM1B,IAAMA,KAAIK,MApB1D,EAAKkB,MAAQ,CACTC,UAAW,GACXJ,aAAc,GACdL,YAAa,IANF,E,qDAWnB,WAAqB,IAAD,OAChBtB,IACKyB,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEU,UAAWL,EAAIQ,c,oBAcpD,WACI,OACI,gCACKC,KAAKL,MAAMC,UAAUK,OAAS,GAAK,yBAAQC,SAAUF,KAAKhB,aAAcK,MAAOW,KAAKL,MAAMR,YAAvD,UAChC,wBAAQgB,UAAQ,EAACd,MAAM,GAAvB,wBACCW,KAAKL,MAAMC,UAAUtB,KAAI,SAAAwB,GAAK,OAAI,wBAAuBT,MAAOS,EAAM1B,GAApC,SAAyC0B,EAAMrB,MAAlCqB,EAAM1B,UAGzD4B,KAAKL,MAAMH,aAAaS,OAAS,GAAK,cAAC,EAAD,aAAa5B,KAAM2B,KAAKL,MAAMH,aAAcrB,MAAO6B,KAAKL,MAAMH,cAA9D,QAAmFQ,KAAKN,kBAAkBM,KAAKL,MAAMR,sB,GApCtJiB,IAAMC,WCqCbO,E,kDAnCX,WAAY1C,GAAO,IAAD,8BACd,cAAMA,IAEDyB,MAAO,CACRkB,MAAO,GACPzD,WAAY,GACZI,aAAc,GACdC,YAAa,IAPH,E,qDAWlB,WAAqB,IAAD,OAChBP,IACKoC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAE2B,MAAOtB,EAAIE,aAC5CrC,IACKkC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAE9B,WAAYmC,EAAIE,aACjDjC,IACK8B,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAE1B,aAAc+B,EAAIE,aACnDhC,IACK6B,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEzB,YAAa8B,EAAIE,e,oBAGtD,WACI,OACI,eAAC,IAAMiB,SAAP,WACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAarC,KAAO2B,KAAKL,MAAMlC,YAAaU,MAAO,iBACnD,cAAC,EAAD,CAAaE,KAAO2B,KAAKL,MAAMnC,aAAcW,MAAO,yBACpD,cAAC,EAAD,CAAaE,KAAO2B,KAAKL,MAAMkB,MAAO1C,MAAO,qBAC7C,cAAC,EAAD,CAAaE,KAAO2B,KAAKL,MAAMvC,WAAYe,MAAO,8B,GA9B1CiC,IAAMC,WCkCfS,E,kDAlCX,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAQV6C,aAAe,SAAC9B,GACZ,EAAKC,SAAS,CAAE8B,OAAQ/B,EAAEG,OAAOC,SAVlB,EAanB4B,cAbmB,uCAaH,WAAOhC,GAAP,eAAAnC,EAAA,sEACOY,EAAU,EAAKiC,MAAMqB,QAD5B,OACRE,EADQ,OAEZ,EAAKhC,SAAS,CAAEO,QAASyB,EAAOzB,UAFpB,2CAbG,sDAGf,EAAKE,MAAQ,CACTqB,OAAQ,GACRvB,QAAS,IALE,E,0CAkBnB,WACI,OACI,qCACA,sBAAKrB,GAAG,SAAR,UAEI,uBAAO+C,KAAK,OAAO9B,MAAOW,KAAKL,MAAMqB,OAAQd,SAAUF,KAAKe,aAAc3C,GAAG,aAE7E,wBAAQgD,QAASpB,KAAKiB,cAAe7C,GAAG,eAAxC,SAAuD,+CAI3D,cAAC,EAAD,CAAaC,KAAM2B,KAAKL,MAAMF,QAAStB,MAAM,0B,GA9BjCiC,IAAMC,W,gBCFf,SAASgB,EAAOnD,GAC3B,OACI,sBAAKE,GAAG,SAAR,UACI,eAAC,IAAD,CAAMkD,GAAG,oBAAT,cAA8B,wBAAQ9C,UAAU,SAAlB,qBAC9B,eAAC,IAAD,CAAM8C,GAAG,0BAAT,cAAoC,wBAAQ9C,UAAU,SAAlB,uBACpC,cAAC,IAAD,CAAM8C,GAAG,sBAAT,SAA+B,wBAAQ9C,UAAU,SAAlB,qB,WCE5B,SAAS+C,IACpB,OACI,8BACI,eAAC,IAAD,WACI,cAACF,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,0BAA0BC,UAAWpB,IACvD,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,sBAAsBC,UAAWd,IACnD,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,oBAAoBC,UAAWZ,YCjBrE,IAYea,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.895a6520.chunk.js","sourcesContent":["import dotenv from 'dotenv'\ndotenv.config()\nconst API_KEY = process.env.REACT_APP_TMDB_KEY\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst endPoints = {\n    popularM: '/movie/popular',\n    popularTV: '/tv/popular',\n    topRatedM: '/movie/top_rated',\n    topRatedTV: '/tv/top_rated',\n    nowPlayingM: '/movie/now_playing',\n    nowPlayingTV: '/tv/on_the_air',\n    airingToday: '/tv/airing_today',\n    search: '/search/multi',\n    movieGenres: '/genre/movie/list',\n    tvGenres: '/genre/tv/list',\n    movieDiscover: '/discover/movie',\n    tvDiscover: '/discover/tv'\n}\n\n\nexport const popularMovie = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.popularM}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const popularTV = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.popularTV}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const topRatedMovie = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.topRatedM}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const topRatedTV = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.topRatedTV}?api_key=${API_KEY}`)\n    console.log(response)\n    return response.json()\n}\n\nexport const nowPlayingMovie = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.nowPlayingM}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const nowPlayingTV = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.nowPlayingTV}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const airingToday = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.airingToday}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const searchAPI = async (query) => {\n    const response = await fetch(`${BASE_URL}${endPoints.search}?api_key=${API_KEY}&query=${query}`)\n    return response.json()\n}\n\nexport const movieGenres = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.movieGenres}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const tvGenres = async () => {\n    const response = await fetch(`${BASE_URL}${endPoints.tvGenres}?api_key=${API_KEY}`)\n    return response.json()\n}\n\nexport const movieDiscover = async (genreID) => {\n    const response = await fetch(`${BASE_URL}${endPoints.movieDiscover}?api_key=${API_KEY}&with_genres=${genreID}`)\n    return response.json()\n}\n\nexport const tvDiscover = async (genreID) => {\n    const response = await fetch(`${BASE_URL}${endPoints.tvDiscover}?api_key=${API_KEY}&with_genres=${genreID}`)\n    return response.json()\n}\n\n","import React from 'react'\n\nfunction ContentReel(props) {\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <span id='reel'>\n                {props.list.map(item => <div className=\"contentCard\" key={item.id}>\n                    <span id='title'>{item.title || item.name}</span>\n                    <img id='poster' src={(item.poster_path || item.profile_path)?`https://image.tmdb.org/t/p/w500${item.poster_path || item.profile_path }`:'https://bitsofco.de/content/images/2018/12/broken-1.png'} alt={item.title} />\n                    <p id='overview'>{item.overview}</p>\n                </div>)}\n            </span>\n        </div>\n    )\n}\n\nexport default ContentReel","import React from 'react'\nimport {movieGenres, movieDiscover} from '../networkRequest'\nimport ContentReel from './ContentReel'\n\nclass MovieGenre extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            genreMenu: [],\n            displayedCat: [],\n            selectedCat: \"\"\n        }\n    }\n\n    \n    componentDidMount(){\n        movieGenres()\n            .then(res => this.setState({ genreMenu: res.genres }))\n    }\n    \n    dropDownMenu = (e) => {\n        this.setState({ selectedCat: e.target.value})\n        movieDiscover(e.target.value)\n            .then(res => this.setState({ displayedCat: res.results })) \n    }\n    \n    convertIDtoString = (id) => {\n        return this.state.genreMenu.find(genre => genre.id == id).name\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.genreMenu.length > 0 && <select onChange={this.dropDownMenu} value={this.state.selectedCat}>\n                    <option disabled value=\"\">Categories</option>\n                    {this.state.genreMenu.map(genre => <option key={genre.id} value={genre.id}>{genre.name}</option>)}\n                </select>}\n\n                {this.state.displayedCat.length > 0 && <ContentReel list={this.state.displayedCat} title={this.convertIDtoString(this.state.selectedCat)}></ContentReel>}\n            </div>\n        )\n    }\n}\n\nexport default MovieGenre","import React from \"react\"\nimport { popularMovie, topRatedMovie, nowPlayingMovie } from '../networkRequest'\nimport ContentReel from './ContentReel'\nimport MovieGenre from \"./MovieGenres\";\n\n\nclass DisplayMovie extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            popMovies: [],\n            topRatedMovies: [],\n            nowPlayingM: [],\n        }\n    }\n\n    componentDidMount() {\n        popularMovie()\n            .then(res => this.setState({ popMovies: res.results }))\n        topRatedMovie()\n            .then(res => this.setState({ topRatedMovies: res.results }))\n        nowPlayingMovie()\n            .then(res => this.setState({ nowPlayingM: res.results }))\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <MovieGenre></MovieGenre>\n                <ContentReel list={this.state.nowPlayingM} title='Now Playing'/>\n                <ContentReel list={this.state.popMovies} title='Popular Movies'/>\n                <ContentReel list={this.state.topRatedMovies} title='Top Rated'/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DisplayMovie","import React from 'react'\nimport { tvGenres, tvDiscover } from '../networkRequest'\nimport ContentReel from './ContentReel'\n\nclass TVGenre extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            genreMenu: [],\n            displayedCat: [],\n            selectedCat: \"\"\n        }\n    }\n\n\n    componentDidMount() {\n        tvGenres()\n            .then(res => this.setState({ genreMenu: res.genres }))\n    }\n\n    dropDownMenu = (e) => {\n        this.setState({ selectedCat: e.target.value})\n        tvDiscover(e.target.value)\n            .then(res => this.setState({ displayedCat: res.results }))\n    }\n\n    convertIDtoString = (id) => {\n        return this.state.genreMenu.find(genre => genre.id == id).name\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.state.genreMenu.length > 0 && <select onChange={this.dropDownMenu} value={this.state.selectedCat}>\n                    <option disabled value=\"\">Categories</option>\n                    {this.state.genreMenu.map(genre => <option key={genre.id} value={genre.id}>{genre.name}</option>)}\n                </select>}\n\n                {this.state.displayedCat.length > 0 && <ContentReel list={this.state.displayedCat} title={this.state.displayedCat} title={this.convertIDtoString(this.state.selectedCat)}></ContentReel>}\n            </div>\n        )\n    }\n}\n\nexport default TVGenre","import React from 'react'\nimport { popularTV, topRatedTV, nowPlayingTV, airingToday } from '../networkRequest'\nimport ContentReel from './ContentReel'\nimport TVGenre from './TVGenres';\n\nclass DisplayTV extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            popTV: [],\n            topRatedTV: [],\n            nowPlayingTV: [],\n            airingToday: []\n        }\n    }\n\n    componentDidMount() {\n        popularTV()\n            .then(res => this.setState({ popTV: res.results }))\n        topRatedTV()\n            .then(res => this.setState({ topRatedTV: res.results }))\n        nowPlayingTV()\n            .then(res => this.setState({ nowPlayingTV: res.results}))\n        airingToday()\n            .then(res => this.setState({ airingToday: res.results}))\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <TVGenre></TVGenre>\n                <ContentReel list ={this.state.airingToday} title ='Airing Today' />\n                <ContentReel list ={this.state.nowPlayingTV} title ='TV Shows Now Playing'/>\n                <ContentReel list ={this.state.popTV} title ='Popular TV Shows'/>\n                <ContentReel list ={this.state.topRatedTV} title ='Top Rated TV Shows'/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default DisplayTV","import React from 'react'\nimport { searchAPI } from '../networkRequest'\nimport ContentReel from './ContentReel'\n\nclass searchBar extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: '',\n            results: []\n        }\n    }\n\n    changeSearch = (e) => {\n        this.setState({ search: e.target.value })\n    }\n\n    triggerSearch = async (e) => {\n        let result = await searchAPI(this.state.search)\n        this.setState({ results: result.results })\n    }\n\n    render() {\n        return (\n            <>\n            <div id='search'>\n\n                <input type='text' value={this.state.search} onChange={this.changeSearch} id='inputBar'></input>\n\n                <button onClick={this.triggerSearch} id='searchButton'><span>Search</span></button>\n                \n                \n            </div>\n            <ContentReel list={this.state.results} title='Search Results'/>\n            </>\n        )\n    }\n}\nexport default searchBar","import React from 'react'\nimport {Link} from 'react-router-dom'\nexport default function NavBar(props){\n    return(\n        <div id='navBar'>\n            <Link to='/nexflix-replica/'> <button className=\"button\">Home</button></Link>\n            <Link to='/nexflix-replica/movies'> <button className=\"button\">Movies</button></Link>\n            <Link to='/nexflix-replica/tv'><button className=\"button\">TV</button></Link>\n        </div>\n    )\n}","import React from 'react'\nimport DisplayMovie from './Components/DisplayMovies'\nimport DisplayTV from './Components/DisplayTV'\nimport searchBar from './Components/HomePage'\nimport './App.css'\nimport NavBar from './Components/NavBar'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\n\nexport default function App() {\n    return (\n        <div>\n            <BrowserRouter>\n                <NavBar/>\n                <Switch>\n                    <Route exact path='/nexflix-replica/movies' component={DisplayMovie} />\n                    <Route exact path='/nexflix-replica/tv' component={DisplayTV} />\n                    <Route exact path='/nexflix-replica/' component={searchBar} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}